27.10.2011 dwi
Problem:
The name of the JAR file generated by the Scout SDK should be based on the WSDL instead of the alias.
This would solve the problem where the provider and the consumer are both part of the application and
there are thus two seperate JAR files containing the same class (with the same package name).
Solution:
- The name of the stub JAR file is not derived from the alias anymore but from the WSDL filename instead.
  This behavior can be overwritten by adding the build property 'jar' with the respective stub JAR file name.
- Phantom stub JAR files can be discovered and removed in Scout SDK on the root node 'Web Services (JAX-WS)'. There you find the link 'Cleanup phantom stub JAR files' on the property page.
Migration:
- rebuild the WS stubs of all providers and consumers
- Remove phantom stub JAR files as described in solution.

06.01.2012 dwi
Bugzilla: 367994
Problem:
a) The WSDL file of webservice providers whose WSDL file is located in a sub-folder of '/WEB-INF/wsdl' is dynamically generated at JAX-WS bootstrap instead of the existing WSDL file to be published.
b) Webservice consumer specific WSDL files might interfere with provider specific WSDL files, e.g. if defining same services or ports. In consequence, all webservice providers of that plugin are not published.
c) redundant WSDL file in webservice stub JAR-file.
Solution:
a) changed JAX-WS resource loading to also look in subfolders for existing resources
b) WS provider specific WSDL files should be located in the folder '/WEB-INF/wsdl/provider' whereas consumer specific WSDL files in '/WEB-INF/wsdl/consumer'. In turn, JAX-WS is instrumented to ignore all the files in the (sub-)folder '/WEB-INF/wsdl/consumer' when publishing the endpoints.
c) WSDL file is not put into the JAR archive anymore when building the webservice stub.
Migration:
- Use Scout SDK (repair actions) to move WSDL files of webservice providers into folder '/WEB-INF/wsdl/provider' and of webservice consumer into folder '/WEB-INF/wsdl/consumers'
- Rebuild webservice stubs (should automatically be done if using repair action)

05.01.2013
Bug-fixes:
- fixed bug that resources (WSDL/schema artefacts) could not be loaded when working on custom Eclipse File System (e.g. when working with JAAZ team provider)
- changed code with file path handling to work with IPath class
- visitor pattern to work with schema artefacts
- visitor pattern to validate URL-pattern/servlet alias
- removed unused code from JaxWsSdkUtility
- consolidated WSDL file loading / file-copy-detection into JaxWsSdkUtility
- minor bug fixes
Migration: None
