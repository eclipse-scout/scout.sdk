package org.eclipse.scout.sdk.core.s.test.client;

import org.eclipse.scout.rt.client.dto.FormData;
import org.eclipse.scout.rt.client.ui.form.AbstractForm;
import org.eclipse.scout.rt.client.ui.form.AbstractFormHandler;
import org.eclipse.scout.rt.client.ui.form.fields.button.AbstractCancelButton;
import org.eclipse.scout.rt.client.ui.form.fields.button.AbstractOkButton;
import org.eclipse.scout.rt.client.ui.form.fields.groupbox.AbstractGroupBox;
import org.eclipse.scout.rt.platform.BEANS;
import org.eclipse.scout.rt.platform.Order;
import org.eclipse.scout.rt.platform.text.TEXTS;
import org.eclipse.scout.sdk.core.s.test.client.MyForm.MainBox.CancelButton;
import org.eclipse.scout.sdk.core.s.test.client.MyForm.MainBox.GroupBox;
import org.eclipse.scout.sdk.core.s.test.client.MyForm.MainBox.OkButton;
import org.eclipse.scout.sdk.core.s.test.shared.IMyFormService;
import org.eclipse.scout.sdk.core.s.test.shared.MyFormData;
import org.eclipse.scout.sdk.core.s.test.shared.MyPermission;

@FormData(value = MyFormData.class, sdkCommand = FormData.SdkCommand.CREATE)
public class MyForm extends AbstractForm {
@Override
protected String getConfiguredTitle() {
// TODO [anonymous] verify translation
return TEXTS.get("My");
}
public MainBox getMainBox() {
return getFieldByClass(MainBox.class);
}
public GroupBox getGroupBox() {
return getFieldByClass(GroupBox.class);
}
public OkButton getOkButton() {
return getFieldByClass(OkButton.class);
}
public CancelButton getCancelButton() {
return getFieldByClass(CancelButton.class);
}
@Order(1000)
public class MainBox extends AbstractGroupBox {
@Order(1000)
public class GroupBox extends AbstractGroupBox {

}
@Order(2000)
public class OkButton extends AbstractOkButton {

}
@Order(3000)
public class CancelButton extends AbstractCancelButton {

}
}
public void startModify() {
startInternalExclusive(new ModifyHandler());
}
public void startNew() {
startInternal(new NewHandler());
}
public class NewHandler extends AbstractFormHandler {
@Override
protected void execLoad() {
MyFormData formData = new MyFormData();
exportFormData(formData);
formData = BEANS.get(IMyFormService.class).prepareCreate(formData);
importFormData(formData);

setEnabledPermission(new MyPermission());
}
@Override
protected void execStore() {
MyFormData formData = new MyFormData();
exportFormData(formData);
formData = BEANS.get(IMyFormService.class).create(formData);
importFormData(formData);
}
}
public class ModifyHandler extends AbstractFormHandler {
@Override
protected void execLoad() {
MyFormData formData = new MyFormData();
exportFormData(formData);
formData = BEANS.get(IMyFormService.class).load(formData);
importFormData(formData);

setEnabledPermission(new MyPermission());
}
@Override
protected void execStore() {
MyFormData formData = new MyFormData();
exportFormData(formData);
formData = BEANS.get(IMyFormService.class).store(formData);
importFormData(formData);
}
}
}
