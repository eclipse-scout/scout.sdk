/*
 * Copyright (c) 2010-2020 BSI Business Systems Integration AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     BSI Business Systems Integration AG - initial API and implementation
 */
package formdata.shared.services.process.replace;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.basic.table.AbstractTableRowData;
import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.fields.tablefield.AbstractTableFieldBeanData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 */
@Generated(value = "formdata.client.ui.forms.replace.TableFieldWithIgnoredColumnsBaseForm", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class TableFieldWithIgnoredColumnsBaseFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public TableBase getTableBase() {
    return getFieldByClass(TableBase.class);
  }

  public static class TableBase extends AbstractTableFieldBeanData {

    private static final long serialVersionUID = 1L;

    @Override
    public TableBaseRowData addRow() {
      return (TableBaseRowData) super.addRow();
    }

    @Override
    public TableBaseRowData addRow(int rowState) {
      return (TableBaseRowData) super.addRow(rowState);
    }

    @Override
    public TableBaseRowData createRow() {
      return new TableBaseRowData();
    }

    @Override
    public Class<? extends AbstractTableRowData> getRowType() {
      return TableBaseRowData.class;
    }

    @Override
    public TableBaseRowData[] getRows() {
      return (TableBaseRowData[]) super.getRows();
    }

    @Override
    public TableBaseRowData rowAt(int index) {
      return (TableBaseRowData) super.rowAt(index);
    }

    public void setRows(TableBaseRowData[] rows) {
      super.setRows(rows);
    }

    public static class TableBaseRowData extends AbstractTableRowData {

      private static final long serialVersionUID = 1L;
      public static final String default_ = "default";
      public static final String create = "create";
      private String m_default;
      private String m_create;

      public String getDefault() {
        return m_default;
      }

      public void setDefault(String newDefault) {
        m_default = newDefault;
      }

      public String getCreate() {
        return m_create;
      }

      public void setCreate(String newCreate) {
        m_create = newCreate;
      }
    }
  }
}
